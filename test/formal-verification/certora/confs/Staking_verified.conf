{
    "files": [
        "test/formal-verification/certora/harness/StakingHarness.sol",
        "test/formal-verification/certora/harness/Initializer.sol",

        "test/formal-verification/certora/mocks/MockDepositContract.sol",
        "src/METH.sol",
        "src/Oracle.sol",
        "src/Pauser.sol",
        "src/UnstakeRequestsManager.sol",
        "src/ReturnsAggregator.sol",
        "src/ReturnsReceiver.sol",
    ],
    "link": [
        "StakingHarness:depositContract=MockDepositContract",
        "StakingHarness:mETH=METH",
        "StakingHarness:oracle=Oracle",
        "StakingHarness:pauser=Pauser",
        "StakingHarness:unstakeRequestsManager=UnstakeRequestsManager",

        "METH:stakingContract=StakingHarness",
        "METH:unstakeRequestsManagerContract=UnstakeRequestsManager",

        "Oracle:pauser=Pauser",
        "Oracle:staking=StakingHarness",
        "Oracle:aggregator=ReturnsAggregator",

        "Pauser:oracle=Oracle",

        "UnstakeRequestsManager:stakingContract=StakingHarness",
        "UnstakeRequestsManager:oracle=Oracle",
        "UnstakeRequestsManager:mETH=METH",

        "ReturnsAggregator:staking=StakingHarness",
        "ReturnsAggregator:oracle=Oracle",
        "ReturnsAggregator:pauser=Pauser",
        "ReturnsAggregator:consensusLayerReceiver=ReturnsReceiver",
        "ReturnsAggregator:executionLayerReceiver=ReturnsReceiver",

        "Initializer:staking=StakingHarness",
        "Initializer:depositContract=MockDepositContract",
        "Initializer:mETH=METH",
        "Initializer:unstakeRequestsManager=UnstakeRequestsManager",
        "Initializer:oracle=Oracle",
        "Initializer:pauser=Pauser",
        "Initializer:consensusLayerReceiver=ReturnsReceiver",
        "Initializer:executionLayerReceiver=ReturnsReceiver",
        "Initializer:aggregator=ReturnsAggregator",
    ],
    "verify": "StakingHarness:test/formal-verification/certora/specs/Staking.spec",
    "loop_iter": "3",
    "optimistic_loop": true,
    "rule_sanity": "basic",
    "msg": "Staking"
}
